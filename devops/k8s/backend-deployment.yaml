apiVersion: apps/v1
kind: Deployment
metadata:
  name: doctor-appointment-backend
  namespace: mydoc
spec:
  replicas: 1
  selector:
    matchLabels: { app: doctor-appointment-backend }
  template:
    metadata:
      labels: { app: doctor-appointment-backend }
    spec:
      containers:
        - name: backend
          image: mydoc/backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/doctor_appointment?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: mysql-secret, key: MYSQL_USER } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: mysql-secret, key: MYSQL_PASSWORD } }
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: 8080 }
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8080 }
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests: { cpu: "100m", memory: "256Mi" }
            limits:   { cpu: "500m", memory: "512Mi" }
---
apiVersion: v1
kind: Service
metadata:
  name: doctor-appointment-backend
  namespace: mydoc
spec:
  selector: { app: doctor-appointment-backend }
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP
